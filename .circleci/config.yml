version: 2.1

executors:
  linux-node14:
    machine:
      image: ubuntu-2004:202107-02
  macos-node14:
    macos:
      xcode: 11.7
    environment:
      TERM: xterm-256color

aliases:
  - &restore_macos_brew_cache
    - when:
          condition:
            and:
              - equal: [ macos-node14, << parameters.platform >> ]
          steps:
              - restore_cache:
                    name: "Restore brew-gmp Cache"
                    key: brew-gmp-cache-v1-{{ arch }}
  - &save_macos_brew_cache
    - when:
          condition:
            and:
              - equal: [ macos-node14, << parameters.platform >> ]
          steps:
              - save_cache:
                    name: "Save brew-gmp Cache"
                    key: brew-gmp-cache-v1-{{ arch }}
                    paths:
                      - /usr/local/Cellar/gmp
                      - /usr/local/include
                      - /usr/local/lib/libgmp.10.dylib
                      - /usr/local/lib/libgmp.a
                      - /usr/local/lib/libgmp.dylib
                      - /usr/local/lib/libgmpxx.4.dylib
                      - /usr/local/lib/libgmpxx.a
                      - /usr/local/lib/libgmpxx.dylib

  - &restore_cairo_cache
    - restore_cache:
          name: "Restore cairo-lang Cache"
          key: cairo-lang-cache-{{ arch }}-v1-{{ checksum "/tmp/cairo-lang-version" }}

  - &save_cairo_cache
    - save_cache:
          name: "Save cairo-lang Cache"
          key: cairo-lang-cache-{{ arch }}-v1-{{ checksum "/tmp/cairo-lang-version" }}
          paths:
            - /usr/python3.8/dist-packages/cairo-lang
            - /usr/python3.9/dist-packages/cairo-lang
            - /Users/distiller/project/my-venv
            - /home/circleci/project/my-venv
            - /usr/local/bin/starknet
            - /usr/local/bin/starknet-compile

  - &restore_devnet_cache
    - restore_cache:
          name: "Restore devnet Cache"
          key: devnet-cache-{{ arch }}-v1-{{ checksum "/tmp/devnet-version" }}

  - &save_devnet_cache
    - save_cache:
          name: "Save devnet Cache"
          key: devnet-cache-{{ arch }}-v1-{{ checksum "/tmp/devnet-version" }}
          paths:
            - /opt/circleci/.pyenv/versions
            - /opt/circleci/.pyenv/shims/starknet-devnet
            - /usr/local/bin/starknet-devnet
            - /usr/local/lib/python3.8/site-packages
            - /usr/local/lib/python3.9/site-packages

commands:
  fetch_dependecies_version:
    description: "Fetch the dependencies version"
    steps:
      - run:
          name: "Fetch Devnet version"
          command: echo $(curl -Ls https://api.github.com/repos/Shard-Labs/starknet-devnet/commits/master | jq -r .sha) > /tmp/devnet-version
      - run:
          name: "Set cairo-lang version"
          command: echo 0.6.2 > /tmp/cairo-lang-version
  restore_dependency_cache:
    parameters:
      platform:
        type: string
    description: "Restore the dependencies from cache"
    steps:
      - <<: *restore_macos_brew_cache
      - <<: *restore_cairo_cache
      - <<: *restore_devnet_cache
  save_dependency_cache:
    parameters:
        platform:
          type: string
    description: "Save the dependencies to cache"
    steps:
      - <<: *save_macos_brew_cache
      - <<: *save_cairo_cache
      - <<: *save_devnet_cache

jobs:
  test:
    parameters:
      platform:
        type: string
      test-name:
        type: string
    executor: << parameters.platform >>
    steps:
      - checkout
      - when:
          condition:
            and:
              - equal: [ linux-node14, << parameters.platform >> ]
          steps:
            - run:
                name: Add file permissions
                command: sudo chown -R circleci /usr/local/bin
      - fetch_dependecies_version
      - restore_dependency_cache:
          platform: << parameters.platform >>
      - run:
          name: Install
          command: npm install
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Build
          command: npm run build
      - run:
          name: << parameters.test-name >>
          command: npm run << parameters.test-name >>
      - save_dependency_cache:
          platform: << parameters.platform >>
  npm_publish:
    docker:
      - image: cimg/node:14.18.1
    steps:
      - checkout
      - run:
          name: Publish
          command: ./scripts/npm-publish.sh

workflows:
  test_and_publish:
    jobs:
      - test:
          matrix:
            parameters:
              platform: [linux-node14, macos-node14]
              test-name: [test-general-tests, test-configuration-tests, test-venv-tests]
            exclude:
              - platform: macos-node14
                test-name: test-general-tests
              - platform: macos-node14
                test-name: test-configuration-tests
      - npm_publish:
          context: shardlabs
          filters:
            branches:
              only:
                - master
          requires:
            - test
