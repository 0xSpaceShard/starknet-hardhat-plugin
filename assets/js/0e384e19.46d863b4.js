"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o="StarkNet Hardhat Plugin",l={unversionedId:"intro",id:"intro",title:"StarkNet Hardhat Plugin",description:"npm package",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/starknet-hardhat-plugin/docs/intro",draft:!1,editUrl:"https://github.com/Shard-Labs/starknet-hardhat-plugin/tree/master/docs/docs/intro.md",tags:[],version:"current",frontMatter:{}},s={},p=[{value:"Contents",id:"contents",level:2},{value:"Install",id:"install",level:2},{value:"Requirements",id:"requirements",level:3},{value:"CLI commands",id:"cli-commands",level:2},{value:"<code>starknet-compile</code>",id:"starknet-compile",level:3},{value:"<code>starknet-verify</code>",id:"starknet-verify",level:3},{value:"<code>starknet-new-account</code>",id:"starknet-new-account",level:3},{value:"<code>starknet-deploy-account</code>",id:"starknet-deploy-account",level:3},{value:"<code>starknet-plugin-version</code>",id:"starknet-plugin-version",level:3},{value:"<code>migrate</code>",id:"migrate",level:3},{value:"<code>run</code>",id:"run",level:3},{value:"<code>test</code>",id:"test",level:3},{value:"API",id:"api",level:2},{value:"Testing",id:"testing",level:2},{value:"Important notes",id:"important-notes",level:3},{value:"Test examples",id:"test-examples",level:3},{value:"Setup",id:"setup",level:4},{value:"Deploy / load contract",id:"deploy--load-contract",level:4},{value:"Arrays",id:"arrays",level:4},{value:"Tuples",id:"tuples",level:4},{value:"Fee estimation",id:"fee-estimation",level:4},{value:"Delegate Proxy",id:"delegate-proxy",level:4},{value:"Transaction information and receipt with events",id:"transaction-information-and-receipt-with-events",level:4},{value:"Devnet examples",id:"devnet-examples",level:3},{value:"L1-L2 communication (Postman message exchange with Devnet)",id:"l1-l2-communication-postman-message-exchange-with-devnet",level:4},{value:"Restart",id:"restart",level:4},{value:"Dumping",id:"dumping",level:4},{value:"Loading",id:"loading",level:4},{value:"Advancing time",id:"advancing-time",level:4},{value:"Creating an empty block",id:"creating-an-empty-block",level:4},{value:"Configure the plugin",id:"configure-the-plugin",level:2},{value:"Cairo version",id:"cairo-version",level:3},{value:"Existing virtual environment",id:"existing-virtual-environment",level:3},{value:"Paths",id:"paths",level:3},{value:"Runtime network",id:"runtime-network",level:3},{value:"Runtime network - Integrated Devnet",id:"runtime-network---integrated-devnet",level:3},{value:"Installing third-party libraries",id:"installing-third-party-libraries",level:3},{value:"With npm packages:",id:"with-npm-packages",level:4},{value:"With pip packages:",id:"with-pip-packages",level:4},{value:"With non-npm git repositories:",id:"with-non-npm-git-repositories",level:4},{value:"Using <code>starknet.getContractFactory</code> with third-party libraries",id:"using-starknetgetcontractfactory-with-third-party-libraries",level:3},{value:"Wallet - Starknet CLI",id:"wallet---starknet-cli",level:3},{value:"Recompilation",id:"recompilation",level:2},{value:"Account",id:"account",level:2},{value:"Create account",id:"create-account",level:3},{value:"Fund account",id:"fund-account",level:3},{value:"Deploy account",id:"deploy-account",level:3},{value:"Reuse account",id:"reuse-account",level:3},{value:"Interact through account",id:"interact-through-account",level:3},{value:"Multicalls",id:"multicalls",level:3},{value:"Guardian",id:"guardian",level:3},{value:"More examples",id:"more-examples",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"starknet-hardhat-plugin"},"StarkNet Hardhat Plugin"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@shardlabs/starknet-hardhat-plugin"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@shardlabs/starknet-hardhat-plugin?color=blue",alt:"npm package"}))),(0,r.kt)("p",null,"If you've used Hardhat \ud83d\udc77\u200d\u2640\ufe0f\ud83d\udc77\u200d\u2642\ufe0f and want to develop for StarkNet ",(0,r.kt)("img",{src:"https://starkware.co/wp-content/uploads/2021/07/Group-177.svg",alt:"starknet",width:"18"}),", this plugin might come in hand. If you've never set up a Hardhat project, check out ",(0,r.kt)("a",{parentName:"p",href:"https://hardhat.org/tutorial/creating-a-new-hardhat-project.html"},"this guide"),"."),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install"},"Install")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cli-commands"},"CLI commands")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#api"},"API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#test"},"Testing"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#important-notes"},"Important notes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#test-examples"},"Examples")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#devnet-examples"},"Devnet examples")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-the-plugin"},"Configure the plugin")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#account"},"Account support")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#more-examples"},"More examples")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#contribute"},"Contribute"))),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm i @shardlabs/starknet-hardhat-plugin --save-dev\n")),(0,r.kt)("p",null,"For the latest unstable version, use"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm i @shardlabs/starknet-hardhat-plugin@alpha --save-dev\n")),(0,r.kt)("p",null,"Add the following line to the top of your ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.js"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import "@shardlabs/starknet-hardhat-plugin";\n// or\nrequire("@shardlabs/starknet-hardhat-plugin");\n')),(0,r.kt)("h3",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"This plugin was tested with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node.js v14.17.3"),(0,r.kt)("li",{parentName:"ul"},"npm/npx v7.19.1"),(0,r.kt)("li",{parentName:"ul"},"Docker v20.10.8 (optional):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Since plugin version 0.3.4, Docker is no longer necessary if you opt for a Python environment (more info in ",(0,r.kt)("a",{parentName:"li",href:"#cairo-version"},"Config"),")."),(0,r.kt)("li",{parentName:"ul"},"If you opt for the containerized version, make sure you have a running Docker daemon."),(0,r.kt)("li",{parentName:"ul"},"If you're experiencing Docker access issues, check ",(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/52364905/after-executing-following-code-of-dockerode-npm-getting-error-connect-eacces-v"},"this"),"."))),(0,r.kt)("li",{parentName:"ul"},"Linux / macOS:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"On Windows, we recommend using ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/windows/wsl/install"},"WSL 2")," with Docker instance installed on ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/windows/wsl/install"},"WSL 2")," instead of using Docker Desktop on your windows. Example installation for Ubuntu can be found ",(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/ubuntu/"},"here"),".")))),(0,r.kt)("h2",{id:"cli-commands"},"CLI commands"),(0,r.kt)("p",null,"This plugin defines the following Hardhat commands (also called tasks):"),(0,r.kt)("h3",{id:"starknet-compile"},(0,r.kt)("inlineCode",{parentName:"h3"},"starknet-compile")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'npx hardhat starknet-compile [PATH...] [--cairo-path "<LIB_PATH1>:<LIB_PATH2>:..."] [--account-contract] [--disable-hint-validation]\n')),(0,r.kt)("p",null,"If no paths are provided, all StarkNet contracts in the default contracts directory are compiled. Paths can be files and directories."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--cairo-path")," allows specifying the locations of imported files, if necessary. Separate them with a colon (:), e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"--cairo-path='path/to/lib1:path/to/lib2'")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--account-contract")," allows compiling an account contract."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--disable-hint-validation")," allows compiling a contract without hint validation (any python code is allowed in hints, ex: print ...)."),(0,r.kt)("h3",{id:"starknet-verify"},(0,r.kt)("inlineCode",{parentName:"h3"},"starknet-verify")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-verify [--starknet-network <NAME>] [--path <PATH>] [<DEPENDENCY_PATH> ...] [--address <CONTRACT_ADDRESS>] [--compiler-version <COMPILER_VERSION>] [--license <LICENSE_SCHEME>] [--contract-name <CONTRACT_NAME>] [--acount-contract]\n")),(0,r.kt)("p",null,"Queries ",(0,r.kt)("a",{parentName:"p",href:"https://voyager.online/"},"Voyager")," to ",(0,r.kt)("a",{parentName:"p",href:"https://voyager.online/verifyContract"},"verify the contract")," deployed at ",(0,r.kt)("inlineCode",{parentName:"p"},"<CONTRACT_ADDRESS>")," using the source files at ",(0,r.kt)("inlineCode",{parentName:"p"},"<PATH>")," and any number of ",(0,r.kt)("inlineCode",{parentName:"p"},"<DEPENDENCY_PATH>"),"."),(0,r.kt)("p",null,"Like in the previous command, this plugin relies on ",(0,r.kt)("inlineCode",{parentName:"p"},"--starknet-network"),", but will default to 'alphaGoerli' network in case this parameter is not passed."),(0,r.kt)("p",null,"The verifier expects ",(0,r.kt)("inlineCode",{parentName:"p"},"<COMPILER_VERSION>")," to be passed on request. Supported compiler versions are listed ",(0,r.kt)("a",{parentName:"p",href:"https://voyager.online/verifyContract"},"here")," in the dropdown menu."),(0,r.kt)("p",null,"We pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--acount-contract")," to tell the verifier that the contract is of type account."),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"<LICENSE_SCHEME>")," the command takes ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/github/choosealicense.com/blob/a40ef42140d137770161addf4fefc715709d8ccd/no-permission.md"},(0,r.kt)("em",{parentName:"a"},"No License (None)"))," as default license scheme. ",(0,r.kt)("a",{parentName:"p",href:"https://goerli.voyager.online/cairo-licenses"},"Here")," is a list of available options."),(0,r.kt)("h3",{id:"starknet-new-account"},(0,r.kt)("inlineCode",{parentName:"h3"},"starknet-new-account")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ATTENTION!")," Use this only if you want to achieve compatibility with the wallet used in Starknet CLI. For all other uses, ",(0,r.kt)("a",{parentName:"p",href:"#account"},"these accounts")," should suffice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-new-account [--starknet-network <NAME>] [--wallet <WALLET_NAME>]\n")),(0,r.kt)("p",null,"Initializes a wallet ",(0,r.kt)("inlineCode",{parentName:"p"},'wallets["WALLET_NAME"]')," configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config")," file, which should then be followed by the command ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet-deploy-account"),". Uses the modified OZ implementation used by StarkNet CLI."),(0,r.kt)("h3",{id:"starknet-deploy-account"},(0,r.kt)("inlineCode",{parentName:"h3"},"starknet-deploy-account")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-deploy-account [--starknet-network <NAME>] [--wallet <WALLET_NAME>]\n")),(0,r.kt)("p",null,"Deploys the wallet ",(0,r.kt)("inlineCode",{parentName:"p"},'wallets["WALLET_NAME"]')," configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config")," file. Uses the modified OZ implementation used by StarkNet CLI. ",(0,r.kt)("em",{parentName:"p"},"Needs to be funded before deploying it.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-deploy-account --starknet-network myNetwork --wallet MyWallet\n")),(0,r.kt)("h3",{id:"starknet-plugin-version"},(0,r.kt)("inlineCode",{parentName:"h3"},"starknet-plugin-version")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-plugin-version\n")),(0,r.kt)("p",null,"Prints the version of the plugin."),(0,r.kt)("h3",{id:"migrate"},(0,r.kt)("inlineCode",{parentName:"h3"},"migrate")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat migrate [PATH...] [--inplace]\n")),(0,r.kt)("p",null,"Converts old cairo code to the new (cairo-lang 0.10.0) syntax. The ",(0,r.kt)("inlineCode",{parentName:"p"},"--inplace")," flag will change the contract file in place."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat migrate --inplace contract/contract.cairo\n")),(0,r.kt)("h3",{id:"run"},(0,r.kt)("inlineCode",{parentName:"h3"},"run")),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"--starknet-network")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat run")," currently does not have effect. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"network")," property of the ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet")," object in your hardhat config file."),(0,r.kt)("h3",{id:"test"},(0,r.kt)("inlineCode",{parentName:"h3"},"test")),(0,r.kt)("p",null,"Introduces the ",(0,r.kt)("inlineCode",{parentName:"p"},"--starknet-network")," option to the existing ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat test")," task."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"Adding this plugin to your project expands Hardhat's runtime with a ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet")," object. It can be imported with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { starknet } from "hardhat";\n// or\nconst starknet = require("hardhat").starknet;\n')),(0,r.kt)("p",null,"To see all the utilities introduced by the ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet")," object, check ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-plugin/blob/master/src/type-extensions.ts#L182"},"this")," out."),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("p",null,"Relying on the above described API makes it easier to interact with your contracts and test them."),(0,r.kt)("p",null,"To test StarkNet contracts with Mocha, use the regular Hardhat ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," task which expects test files in your designated test directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat test\n")),(0,r.kt)("p",null,"Read more about the network used in tests in the ",(0,r.kt)("a",{parentName:"p",href:"#runtime-network"},"Runtime network")," section.\nThese examples are inspired by the official ",(0,r.kt)("a",{parentName:"p",href:"https://www.cairo-lang.org/docs/hello_starknet/unit_tests.html"},"StarkNet Python tutorial"),"."),(0,r.kt)("h3",{id:"important-notes"},"Important notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BigInt")," is used because ",(0,r.kt)("inlineCode",{parentName:"li"},"felt")," may be too big for javascript. Use it like ",(0,r.kt)("inlineCode",{parentName:"li"},'BigInt("10")')," or, since ES2020, like ",(0,r.kt)("inlineCode",{parentName:"li"},"10n"),"."),(0,r.kt)("li",{parentName:"ul"},"All function names, argument names and return value names should be referred to by the names specified in contract source files."),(0,r.kt)("li",{parentName:"ul"},"The argument of ",(0,r.kt)("inlineCode",{parentName:"li"},"getContractFactory")," is the ",(0,r.kt)("strong",{parentName:"li"},"name")," or the ",(0,r.kt)("strong",{parentName:"li"},"path")," of the source of the target contract:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"if providing a path, it should be relative to the project root or the contracts directory:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'getContractFactory("contracts/subdir/MyContract.cairo")')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'getContractFactory("subdir/MyContract.cairo")')))),(0,r.kt)("li",{parentName:"ul"},"the extension can be omitted:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'getContractFactory("subdir/MyContract")')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'getContractFactory("MyContract")'))))))),(0,r.kt)("h3",{id:"test-examples"},"Test examples"),(0,r.kt)("h4",{id:"setup"},"Setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { expect } from "chai";\nimport { starknet } from "hardhat";\n// or\nconst expect = require("chai").expect;\nconst starknet = require("hardhat").starknet;\n\ndescribe("My Test", function () {\n  this.timeout(...);  // Recommended to use a big value if interacting with Alpha Goerli\n')),(0,r.kt)("h4",{id:"deploy--load-contract"},"Deploy / load contract"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'  /**\n   * Assumes there is a file MyContract.cairo whose compilation artifacts have been generated.\n   * The contract is assumed to have:\n   * - constructor function constructor(initial_balance: felt)\n   * - external function increase_balance(amount: felt) -> (res: felt)\n   * - view function get_balance() -> (res: felt)\n   */\n  it("should load a previously deployed contract", async function () {\n    const contractFactory = await starknet.getContractFactory("MyContract");\n    const contract = contractFactory.getContractAt("0x123..."); // address of a previously deployed contract\n  });\n\n  it("should declare and deploy", async function() {\n    const account = await starknet.OpenZeppelinAccount.getAccountFromAddress(...);\n    const contractFactory = await starknet.getContractFactory("MyContract");\n    const classHash = await account.declare(contractFactory);\n\n    // two ways to obtain the class hash\n    expect(classHash).to.equal(await contractFactory.getClassHash());\n\n    const constructorArgs = { initial_balance: 0 };\n    const options = { maxFee: ... };\n    // implicitly invokes UDC\n    const contract = await account.deploy(contractFactory, constructorArgs, options);\n  });\n')),(0,r.kt)("h4",{id:"arrays"},"Arrays"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'/**\n * The contract is assumed to have:\n * - view function sum_array(a_len: felt, a: felt*) -> (res: felt)\n */\nit("should work with arrays", async function () {\n    const contract = ...;\n    // you don\'t have to specify the array length separately\n    const { res } = await contract.call("sum_array", { a: [1, 2, 3] });\n    expect(res).to.deep.equal(BigInt(6));\n});\n')),(0,r.kt)("h4",{id:"tuples"},"Tuples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'/**\n * The contract is assumed to have:\n * - view function sum_pair(pair: (felt, felt)) -> (res : felt)\n * - view func sum_named_pair(pair : (x : felt, y : felt) -> (res : felt)\n * - using PairAlias = (x : felt, y : felt)\n * - view func sum_type_alias(pair : PairAlias) -> (res : felt)\n */\nit("should work with tuples", async function () {\n    const contract = ...;\n    // notice how the pair tuple is passed as javascript array\n    const { res } = await contract.call("sum_pair", { pair: [10, 20] });\n    ... = await contract.call("sum_named_pair", { pair: { x: 10, y: 20 } });\n    ... = await contract.call("sum_type_alias", { pair: { x: 10, y: 20 } });\n    expect(res).to.deep.equal(BigInt(30));\n});\n')),(0,r.kt)("h4",{id:"fee-estimation"},"Fee estimation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'it("should estimate fee", async function () {\n    const fee = await account.estimateFee(contract, "increase_balance", { amount: 10n });\n    console.log("Estimated fee:", fee.amount, fee.unit, fee.gas_price, fee.gas_amount);\n});\n')),(0,r.kt)("h4",{id:"delegate-proxy"},"Delegate Proxy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'it("should forward to the implementation contract", async function () {\n    const implementationFactory = await starknet.getContractFactory("contract");\n    const account = ...;\n    const implementationClassHash = await account.declare(implementationFactory);\n\n    const proxyFactory = await starknet.getContractFactory("delegate_proxy");\n    await account.declare(proxyFactory);\n    const proxy = await account.deploy(proxyFactory, {\n        implementation_hash_: implementationClassHash\n    });\n\n    proxy.setImplementation(implementationFactory);\n    const { res: initialProxyBalance } = await proxy.call("get_balance");\n});\n')),(0,r.kt)("h4",{id:"transaction-information-and-receipt-with-events"},"Transaction information and receipt with events"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'it("should return transaction data and transaction receipt", async function () {\n    const contract: StarknetContract = ...;\n    console.log("Deployment transaction hash:", contract.deployTxHash);\n\n    const transaction = await starknet.getTransaction(contract.deployTxHash);\n    console.log(transaction);\n\n    const account = ...;\n    const txHash = await account.invoke(contract, "increase_balance", { amount: 10 });\n\n    const receipt = await starknet.getTransactionReceipt(txHash);\n    const decodedEvents = contract.decodeEvents(receipt.events);\n\n    const txTrace = await starknet.getTransactionTrace(txHash);\n    // decodedEvents contains hex data array converted to a structured object\n    // { name: "increase_balance_called", data: { current_balance: 0n, amount: 10n } }\n});\n')),(0,r.kt)("p",null,"For more usage examples, including tuple, array and struct support, as well as Starknet CLI wallet support, check ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-example/blob/master/test/sample-test.ts"},"sample-test.ts")," of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-example"},"starknet-hardhat-example"),"."),(0,r.kt)("h3",{id:"devnet-examples"},"Devnet examples"),(0,r.kt)("h4",{id:"l1-l2-communication-postman-message-exchange-with-devnet"},"L1-L2 communication (Postman message exchange with Devnet)"),(0,r.kt)("p",null,"Exchanging messages between L1 (",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ganache"},"Ganache"),", ",(0,r.kt)("a",{parentName:"p",href:"https://hardhat.org/hardhat-network/#running-stand-alone-in-order-to-support-wallets-and-other-software"},"Hardhat node"),", Ethereum testnet) and L2 (only supported for ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-devnet"},"starknet-devnet"),") can be done using this plugin:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ensure there is an available L1 network and that you know its RPC endpoint URL."),(0,r.kt)("li",{parentName:"ul"},"Load an L1 Messaging contract using ",(0,r.kt)("inlineCode",{parentName:"li"},"starknet.devnet.loadL1MessagingContract"),"."),(0,r.kt)("li",{parentName:"ul"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"starknet.devnet.flush")," after you ",(0,r.kt)("inlineCode",{parentName:"li"},"invoke")," your contract and want to propagate your message."),(0,r.kt)("li",{parentName:"ul"},"When running a hardhat test or script which relies on ",(0,r.kt)("inlineCode",{parentName:"li"},'network["config"]'),", specify the name of an L1 network you defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"hardhat.config"),". Use ",(0,r.kt)("inlineCode",{parentName:"li"},"npx hardhat test --network <NETWORK_NAME>"),". Network ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost")," is predefined in hardhat so ",(0,r.kt)("inlineCode",{parentName:"li"},"--network localhost")," should work if you're using e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"npx hardhat node")," as the L1 network."),(0,r.kt)("li",{parentName:"ul"},"Check ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Shard-Labs/starknet-hardhat-example/blob/master/test/postman.test.ts#L98"},"this example")," for more info.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'  it("should exchange messages with Devnet", async function() {\n    await starknet.devnet.loadL1MessagingContract(...);\n    const l1contract = ...;\n    const l2contract = ...;\n\n    await l1contract.send(...); // depending on your L1 contract interaction library\n    await starknet.devnet.flush();\n\n    const account = ...;\n    await account.invoke(l2contract, ...);\n    await starknet.devnet.flush();\n  });\n')),(0,r.kt)("h4",{id:"restart"},"Restart"),(0,r.kt)("p",null,"Devnet can be restarted by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.restart()"),". All of the deployed contracts, blocks and storage updates will be restarted to the empty state."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await starknet.devnet.restart();\n")),(0,r.kt)("h4",{id:"dumping"},"Dumping"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.dump()")," to maintain the Devnet instance from the plugin."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await starknet.devnet.dump(path); // path to dump file (eg. dump.pkl)\n")),(0,r.kt)("h4",{id:"loading"},"Loading"),(0,r.kt)("p",null,"Dumped Devnet instance can be loaded using ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.load()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await starknet.devnet.load(path); // path for dump file (eg. dump.pkl)\n")),(0,r.kt)("h4",{id:"advancing-time"},"Advancing time"),(0,r.kt)("p",null,"The plugin comes with support for ",(0,r.kt)("a",{parentName:"p",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/advancing-time"},"Devnet's timestamp management"),".\nThe time offset for each generated block can be increased by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.increaseTime()"),". The time for the next block can be set by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.setTime()"),", with subsequent blocks keeping the set offset."),(0,r.kt)("p",null,"Warning: ",(0,r.kt)("em",{parentName:"p"},"block time can be set in the past and lead to unexpected behaviour!")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await starknet.devnet.setTime(1000); // time in seconds\nawait starknet.devnet.increaseTime(1000); // time in seconds\n")),(0,r.kt)("h4",{id:"creating-an-empty-block"},"Creating an empty block"),(0,r.kt)("p",null,"Devnet offers ",(0,r.kt)("a",{parentName:"p",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/blocks#create-an-empty-block"},"empty block creation"),". It can be useful to make available those changes that take effect with the next block."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const emptyBlock = await starknet.devnet.createBlock();\n")),(0,r.kt)("h2",{id:"configure-the-plugin"},"Configure the plugin"),(0,r.kt)("p",null,"Specify custom configuration by editing your project's ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.js"),")."),(0,r.kt)("h3",{id:"cairo-version"},"Cairo version"),(0,r.kt)("p",null,"Use this configuration option to select the ",(0,r.kt)("inlineCode",{parentName:"p"},"cairo-lang"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"starknet")," version used by the underlying Docker container."),(0,r.kt)("p",null,"A Docker image tailored to the machine will be pulled. The ",(0,r.kt)("inlineCode",{parentName:"p"},"-arm")," suffix will be applied to the version name, if it's not applied on ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts"),", if the device's architecture is ",(0,r.kt)("inlineCode",{parentName:"p"},"arm64"),". (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'dockerizedVersion: "0.8.1-arm"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'dockerizedVersion: "0.8.1"')," both will work)."),(0,r.kt)("p",null,"If you specify neither ",(0,r.kt)("inlineCode",{parentName:"p"},"dockerizedVersion")," nor ",(0,r.kt)("a",{parentName:"p",href:"#existing-virtual-environment"},"venv"),", the latest dockerized version is used."),(0,r.kt)("p",null,"A list of available dockerized versions can be found ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/shardlabs/cairo-cli/tags"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  starknet: {\n    dockerizedVersion: "0.8.1"\n  }\n  ...\n};\n')),(0,r.kt)("h3",{id:"existing-virtual-environment"},"Existing virtual environment"),(0,r.kt)("p",null,"If you want to use an existing Python virtual environment (pyenv, poetry, conda, miniconda), specify it by using ",(0,r.kt)("inlineCode",{parentName:"p"},'starknet["venv"]'),"."),(0,r.kt)("p",null,"To use the currently activated environment (or if you have the starknet commands globally installed), set ",(0,r.kt)("inlineCode",{parentName:"p"},"venv")," to ",(0,r.kt)("inlineCode",{parentName:"p"},'"active"'),"."),(0,r.kt)("p",null,"In any case, the specified environment is expected to contain the ",(0,r.kt)("inlineCode",{parentName:"p"},"python3")," command."),(0,r.kt)("p",null,"If you are on a Mac, you may experience Docker-related issues, so this may be the only way to run the plugin."),(0,r.kt)("p",null,"If you specify neither ",(0,r.kt)("a",{parentName:"p",href:"#cairo-version"},"dockerizedVersion")," nor ",(0,r.kt)("inlineCode",{parentName:"p"},"venv"),", the latest dockerized version is used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'module.exports = {\n    starknet: {\n        // venv: "active" <- for the active virtual environment\n        // venv: "path/to/my-venv" <- for env created with e.g. `python -m venv path/to/my-venv`\n        venv: "<VENV_PATH>"\n    }\n};\n')),(0,r.kt)("h3",{id:"paths"},"Paths"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'module.exports = {\n  paths: {\n    // Defaults to "contracts" (the same as `paths.sources`).\n    starknetSources: "my-own-starknet-path",\n\n    // Defaults to "starknet-artifacts".\n    // Has to be different from the value set in `paths.artifacts` (which is used by core Hardhat and has a default value of `artifacts`).\n    starknetArtifacts: "also-my-own-starknet-path",\n\n   // Same purpose as the `--cairo-path` argument of the `starknet-compile` command\n   // Allows specifying the locations of imported files, if necessary.\n    cairoPaths: ["my/own/cairo-path1", "also/my/own/cairo-path2"]\n  }\n  ...\n};\n')),(0,r.kt)("h3",{id:"runtime-network"},"Runtime network"),(0,r.kt)("p",null,"To set the network used in your Hardhat scripts/tests, use ",(0,r.kt)("inlineCode",{parentName:"p"},'starknet["network"]')," or the ",(0,r.kt)("inlineCode",{parentName:"p"},"--starknet-network")," CLI option. Not specifying one will default to using alpha-goerli. Do not confuse this network with Hardhat's default ",(0,r.kt)("inlineCode",{parentName:"p"},"--network")," option which refers to the L1 network."),(0,r.kt)("p",null,"A faster approach is to use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-devnet"},"starknet-devnet"),", a Ganache-like local testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  starknet: {\n    network: "myNetwork"\n  },\n  networks: {\n    devnet: { // this way you can also specify it with `--starknet-network devnet`\n      url: "http://127.0.0.1:5050"\n    }\n  }\n  ...\n};\n')),(0,r.kt)("p",null,"Predefined networks include ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha-goerli"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha-goerli2"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha-mainnet")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"integrated-devnet"),"."),(0,r.kt)("h3",{id:"runtime-network---integrated-devnet"},"Runtime network - Integrated Devnet"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-devnet"},"starknet-devnet")," is available out of the box as a starknet network called ",(0,r.kt)("inlineCode",{parentName:"p"},"integrated-devnet"),". By default, it will spawn Devnet using its Docker image and listening on ",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:5050"),". Target it via the hardhat config file or ",(0,r.kt)("inlineCode",{parentName:"p"},"--starknet-network integrated-devnet"),"."),(0,r.kt)("p",null,"By defining/modifying ",(0,r.kt)("inlineCode",{parentName:"p"},'networks["integratedDevnet"]')," in your hardhat config file, you can specify:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the version of Devnet to use (effectivelly specifying the version of the underlying Docker image)"),(0,r.kt)("li",{parentName:"ul"},"a Python environment with installed starknet-devnet (can be active environment); this will avoid using the dockerized version"),(0,r.kt)("li",{parentName:"ul"},"CLI arguments to be used on Devnet startup: ",(0,r.kt)("a",{parentName:"li",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/run"},"options")),(0,r.kt)("li",{parentName:"ul"},"where output should be flushed ",(0,r.kt)("em",{parentName:"li"},"(either to the terminal or to a file)"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  starknet: {\n    network: "integrated-devnet"\n  },\n  networks: {\n    integratedDevnet: {\n      url: "http://127.0.0.1:5050",\n\n      // venv: "active" <- for the active virtual environment with installed starknet-devnet\n      // venv: "path/to/venv" <- for env with installed starknet-devnet (created with e.g. `python -m venv path/to/venv`)\n      venv: "<VENV_PATH>",\n\n      // or specify Docker image tag\n      dockerizedVersion: "<DEVNET_VERSION>",\n\n      // optional devnet CLI arguments, read more here: https://shard-labs.github.io/starknet-devnet/docs/guide/run\n      args: ["--gas-price", "2000000000", "--fork-network", "alpha-goerli"],\n\n      // stdout: "logs/stdout.log" <- dumps stdout to the file\n      stdout: "STDOUT", // <- logs stdout to the terminal\n      // stderr: "logs/stderr.log" <- dumps stderr to the file\n      stderr: "STDERR"  // <- logs stderr to the terminal\n    }\n  }\n  ...\n};\n')),(0,r.kt)("h3",{id:"installing-third-party-libraries"},"Installing third-party libraries"),(0,r.kt)("p",null,"If you want to install a third-party Cairo library and be able to import it in your Cairo files, use the following pattern:"),(0,r.kt)("h4",{id:"with-npm-packages"},"With npm packages:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install (example package: ",(0,r.kt)("inlineCode",{parentName:"li"},"influenceth__cairo_math_64x61@npm:@influenceth/cairo-math-64x61"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install --save-dev influenceth__cairo_math_64x61@npm:@influenceth/cairo-math-64x61\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"li"},"paths.cairoPaths")," section of your ",(0,r.kt)("inlineCode",{parentName:"li"},"hardhat.config")," file (",(0,r.kt)("a",{parentName:"li",href:"#paths"},"docs"),"):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'paths: {\n    cairoPaths: ["./node_modules"];\n}\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Import")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"from influenceth__cairo_math_64x61.contracts.Math64x61 import Math64x61_ONE, Math64x61_mul\n")),(0,r.kt)("h4",{id:"with-pip-packages"},"With pip packages:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install (example package: ",(0,r.kt)("inlineCode",{parentName:"li"},"openzeppelin-cairo-contracts"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pip install openzeppelin-cairo-contracts\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"If you are installing in a virtual environment, edit the ",(0,r.kt)("inlineCode",{parentName:"li"},"paths.cairoPaths")," section of your ",(0,r.kt)("inlineCode",{parentName:"li"},"hardhat.config")," file (",(0,r.kt)("a",{parentName:"li",href:"#paths"},"docs"),") as:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'paths: {\n    // this directory contains the openzeppelin directory\n    cairoPaths: ["path/to/cairo_venv/lib/python3.8/site-packages"];\n}\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Import")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"from openzeppelin.token.erc20.library import ERC20\n")),(0,r.kt)("h4",{id:"with-non-npm-git-repositories"},"With non-npm git repositories:"),(0,r.kt)("p",null,"If you want to install directly from a git repo that doesn't contain ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", you cannot use ",(0,r.kt)("inlineCode",{parentName:"p"},"npm i"),". However, ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")," supports this."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install (example package: ",(0,r.kt)("inlineCode",{parentName:"li"},"https://github.com/OpenZeppelin/cairo-contracts"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn add openzeppelin__cairo_contracts@git+https://git@github.com/OpenZeppelin/cairo-contracts.git\n")),(0,r.kt)("h3",{id:"using-starknetgetcontractfactory-with-third-party-libraries"},"Using ",(0,r.kt)("inlineCode",{parentName:"h3"},"starknet.getContractFactory")," with third-party libraries"),(0,r.kt)("p",null,"This paragraph assumes you've read and run ",(0,r.kt)("a",{parentName:"p",href:"#Installing-third-party-libraries"},"3rd party library installation"),".\nThe example package used is ",(0,r.kt)("inlineCode",{parentName:"p"},"https://github.com/OpenZeppelin/cairo-contracts")," so you may want to check ",(0,r.kt)("a",{parentName:"p",href:"#With-non-npm-git-repositories"},"non-npm git repos"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Compile")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx hardhat starknet-compile node_modules/openzeppelin__cairo_contracts/src/openzeppelin/token/erc20/presets/ERC20.cairo\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Get contract factory")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const contractFactory = await starknet.getContractFactory(\n    "node_modules/openzeppelin__cairo_contracts/src/openzeppelin/token/erc20/presets/ERC20"\n);\n')),(0,r.kt)("h3",{id:"wallet---starknet-cli"},"Wallet - Starknet CLI"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ATTENTION!")," Use this only if you want to achieve compatibility with the wallet used in Starknet CLI. For all other uses, ",(0,r.kt)("a",{parentName:"p",href:"#account"},"these accounts")," should suffice."),(0,r.kt)("p",null,"To configure a wallet for your project, specify it by adding an entry to ",(0,r.kt)("inlineCode",{parentName:"p"},"wallets")," in your hardhat config file.\nYou can specify multiple wallets/accounts."),(0,r.kt)("p",null,"The parameters for the wallet are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accountName"),": The name to give the account. If omitted, the default value ",(0,r.kt)("inlineCode",{parentName:"li"},"__default__")," will be used;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modulePath"),": The python module and wallet class of your chosen wallet provider;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accountPath"),": The path where your wallet information will be saved.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  starknet: {\n    wallets: {\n      MyWallet: {\n        accountName: "OpenZeppelin",\n        modulePath: "starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount",\n        accountPath: "~/.starknet_accounts"\n      },\n      AnotherWallet: {\n        accountName: "AnotherOpenZeppelin",\n        modulePath: "starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount",\n        accountPath: "~/.starknet_accounts"\n      }\n    }\n  }\n  ...\n};\n')),(0,r.kt)("p",null,"Accounts are deployed in the same network as the one passed as an argument to the ",(0,r.kt)("inlineCode",{parentName:"p"},"npx hardhat starknet-deploy-account")," CLI command."),(0,r.kt)("p",null,"To use the wallet in your scripts, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"getWallet")," utility function (using ",(0,r.kt)("inlineCode",{parentName:"p"},"Account.getAccountFromAddress(...)")," will probably not work):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { starknet } from "hardhat";\n...\nconst wallet = starknet.getWallet("MyWallet");\nconst contract = ...;\nawait contract.invoke("increase_balance", { amount: 1 }, { wallet });\n')),(0,r.kt)("h2",{id:"recompilation"},"Recompilation"),(0,r.kt)("p",null,"Recompilation is performed when contracts are updated or when artifacts are missing. A file will be created with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"cairo-files-cache.json")," to handle caching. Recompilation is handled before the following ",(0,r.kt)("a",{parentName:"p",href:"#cli-commands"},"CLI commands")," are executed."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npx hardhat run")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npx hardhat test"))),(0,r.kt)("p",null,"This feature is turned off by default and is specified in the ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"module.exports = {\n    starknet: {\n        recompile: true // <- to switch recompilation on\n    }\n};\n")),(0,r.kt)("h2",{id:"account"},"Account"),(0,r.kt)("p",null,"In Starknet, an account is a contract through which you interact with other contracts.\nIts usage is exemplified ",(0,r.kt)("a",{parentName:"p",href:"#accounts"},"earlier in the docs")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-example/blob/plugin/test/oz-account-test.ts"},"in the example repo"),"."),(0,r.kt)("p",null,"There are several Starknet account implementations; this plugin supports the following as properties of ",(0,r.kt)("inlineCode",{parentName:"p"},"hre.starknet"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OpenZeppelinAccount")," - ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.5.1"},"v0.5.1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ArgentAccount")," - Commit ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/argentlabs/argent-contracts-starknet/tree/780760e4156afe592bb1feff7e769cf279ae9831"},"780760e")," of branch develop.")),(0,r.kt)("h3",{id:"create-account"},"Create account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { starknet } from "hardhat";\nconst account = await starknet.OpenZeppelinAccount.createAccount();\nconst accountFromOptions = await starknet.OpenZeppelinAccount.createAccount({\n    salt: "0x123", // salt to always deploy to an expected address\n    privateKey: process.env.MY_KEY // the key only known to you, the public key will be inferred\n});\nconsole.log(account.address);\n')),(0,r.kt)("h3",{id:"fund-account"},"Fund account"),(0,r.kt)("p",null,"After creating the account, you need to fund it (give it some ETH):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On alpha-goerli use ",(0,r.kt)("a",{parentName:"li",href:"https://faucet.goerli.starknet.io/"},"this faucet"),"."),(0,r.kt)("li",{parentName:"ul"},"On alpha-goerli2 use ",(0,r.kt)("a",{parentName:"li",href:"https://www.newton.so/view/636d020159c30b8efc8d1d86"},"this")),(0,r.kt)("li",{parentName:"ul"},"On starknet-devnet use ",(0,r.kt)("a",{parentName:"li",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/mint-token/"},"this faucet"),"."),(0,r.kt)("li",{parentName:"ul"},"Alternatively transfer some amount from an already funded account to the newly deployed account.")),(0,r.kt)("p",null,"If you're facing issues loading the account you've just funded, check out ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-plugin/issues/281#issuecomment-1354588817"},"this issue"),"."),(0,r.kt)("h3",{id:"deploy-account"},"Deploy account"),(0,r.kt)("p",null,"After funding the account, you need to deploy it (in case of ",(0,r.kt)("inlineCode",{parentName:"p"},"ArgentAccount"),", this will also take care of initialization):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await account.deployAccount({ maxFee: ... });\n")),(0,r.kt)("p",null,"To successfully deploy ",(0,r.kt)("inlineCode",{parentName:"p"},"ArgentAccount"),", the chain you are interacting with is expected to have ",(0,r.kt)("inlineCode",{parentName:"p"},"ArgentAccount")," contracts declared. Alpha Goerli and Alpha Mainnet satisfy this criterion, but if you're working with Devnet, this is most easily achievable by running Devnet ",(0,r.kt)("a",{parentName:"p",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/fork"},"forked")," from e.g. Alpha Goerli."),(0,r.kt)("h3",{id:"reuse-account"},"Reuse account"),(0,r.kt)("p",null,"To retrieve an already deployed Account, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"getAccountFromAddress")," method. What may be especially useful are ",(0,r.kt)("a",{parentName:"p",href:"https://shard-labs.github.io/starknet-devnet/docs/guide/Predeployed-accounts"},"predeployed+predefined accounts")," that come with Devnet (retrieve them with ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet.devnet.getPredeployedAccounts()"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const account = await starknet.OpenZeppelinAccount.getAccountFromAddress(\n    accountAddress,\n    process.env.PRIVATE_KEY\n);\n")),(0,r.kt)("h3",{id:"interact-through-account"},"Interact through account"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"invoke")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"Account")," to invoke (change the state), but ",(0,r.kt)("inlineCode",{parentName:"p"},"call")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"StarknetContract")," to call (read the state)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await account.invoke(contract, "increase_balance", { amount });\nconst { res: amount } = await contract.call("get_balance");\n')),(0,r.kt)("p",null,"Once your account is funded and deployed, you can specify a max fee greater than zero:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await account.invoke(contract, "foo", { arg1: ... }, { maxFee: BigInt(...) });\n')),(0,r.kt)("p",null,"If you don't specify a ",(0,r.kt)("inlineCode",{parentName:"p"},"maxFee"),", one will be calculated for you by applying an overhead of 50% to the result of fee estimation. You can also customize the overhead by providing a value for ",(0,r.kt)("inlineCode",{parentName:"p"},"overhead"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// maxFee will be 40% of estimated fee; if overhead not provided, the default value is used.\nawait account.invoke(contract, "foo", { arg1: ... }, { overhead: 0.4 });\n')),(0,r.kt)("h3",{id:"multicalls"},"Multicalls"),(0,r.kt)("p",null,"You can also use the Account object to perform multi{invokes, fee estimations}."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const interactionArray = [\n    {\n        toContract: contract1,\n        functionName: "increase_balance",\n        calldata: { amount: 10n }\n    },\n    {\n        toContract: contract2,\n        functionName: "increase_balance",\n        calldata: { amount: 20n }\n    }\n];\nconst fee = await account.multiEstimateFee(interactionArray);\nconst txHash = await account.multiInvoke(interactionArray);\n')),(0,r.kt)("h3",{id:"guardian"},"Guardian"),(0,r.kt)("p",null,"Unlike OpenZeppelin account, Argent account offers ",(0,r.kt)("a",{parentName:"p",href:"https://support.argent.xyz/hc/en-us/articles/360022631992-About-guardians"},"guardian functionality"),". The guardian is by default not set (the guardian key is undefined), but if you want to change it, cast the ",(0,r.kt)("inlineCode",{parentName:"p"},"account")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"ArgentAccount")," and execute ",(0,r.kt)("inlineCode",{parentName:"p"},"setGuardian"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await argentAccount.setGuardian(process.env.GUARDIAN_PRIVATE_KEY, { maxFee: 1e18 });\n// to unset it, use an undefined key\nawait argentAccount.setGuardian(undefined, { maxFee: 1e18 });\n")),(0,r.kt)("h2",{id:"more-examples"},"More examples"),(0,r.kt)("p",null,"An example Hardhat project using this plugin can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-example"},"here"),"."))}u.isMDXComponent=!0}}]);